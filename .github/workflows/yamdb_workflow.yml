name: Django-app workflow

on: [ push ]

jobs:

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/goodorbad:v1
          context: gob
          file: gob/Dockerfile

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |

            sudo docker compose pull telega
            touch .env
#            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
#            echo TELEGRAM_TO=${{ secrets.TELEGRAM_TO }} >> .env
#            echo YA_TOKEN=${{ secrets.YA_TOKEN }} >> .env
#            echo YA_GEO_TOKEN=${{ secrets.YA_GEO_TOKEN }} >> .env
#            echo TELEGRAM_TOKEN_FOR_MESSAGE=${{ secrets.TELEGRAM_TOKEN_FOR_MESSAGE }} >> .env
#            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
#            sudo docker compose up -d
#            sudo docker compose exec -T telega python manage.py collectstatic --no-input
#            sudo docker compose exec -T telega python manage.py migrate
#            sudo docker compose exec -T telega gunicorn gob.wsgi:application --bind 0:8000 &
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN_FOR_MESSAGE }}
          message: ${{ github.workflow }} успешно выполнен!!!
